{"version":3,"sources":["webpack:///webpack/bootstrap 990d27bc6f905e5d5b6c","webpack:///./scripts/app.js","webpack:///./scripts/welcome.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA,eAAc,GAAG,IAAI,GAAG,QAAQ,GAAG,SAAS;AAC5C,kBAAiB;AACjB,wBAAuB;AACvB,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,IAAI,SAAS,IAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;;;;;AClDA;AACA;AACA;AACA,G","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 990d27bc6f905e5d5b6c\n **/","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import {Layer, Rect, Stage, Group} from 'react-konva';\n//\n//\n// class MyRect extends React.Component {\n//   constructor(...args) {\n//     super(...args);\n//     this.state = {\n//       color: 'green'\n//     };\n//     this.handleClick = this.handleClick.bind(this);\n//   }\n//   handleClick() {\n//     this.setState({\n//       color: Konva.Util.getRandomColor()\n//     });\n//   }\n//   render() {\n//     return (\n//       <Rect\n//         x={10} y={10} width={50} height={50}\n//         fill={this.state.color}\n//         shadowBlur={10}\n//         onClick={this.handleClick}\n//       />\n//     );\n//   }\n// }\n//\n// function App() {\n//   // Stage - is a div wrapper\n//   // Layer - is a <canvas> element on the page\n//   // so you can use several canvases. It may help you to improve performance a lot.\n//   return (\n//     <Stage width={700} height={700}>\n//       <Layer>\n//         <MyRect/>\n//       </Layer>\n//     </Stage>\n//   );\n// }\n//\n//\n// ReactDOM.render(<App/>, document.getElementById('app'));\n\nlet welcome = require('./welcome');\n\nwelcome('homie');\n\nexports.welcome = welcome;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/app.js\n ** module id = 0\n ** module chunks = 0\n **/","module.exports = function(message) {\n  debugger;\n  alert(message);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/welcome.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}